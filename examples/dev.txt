
/*
// these types are invalid because they are bottom types.
typedef X = X
typedef A = B
typedef B = A
typedef X<x,y> = Y[y,x]
typedef Y<y,x> = X[x,y]
*/

// FIXME bound check, requires subtype fix to include typing environment
//<B><A <: B> subtype forall X<:B.X <: A // X == A, iff A <: B
//<B><A <: B> subtype A <: exists X<:B.X // X == A, iff A <: B


// this should fail at the type creation level, since W is not bound on the right of <:
//subtype exists X<:int.X <: exists W<:W.W
