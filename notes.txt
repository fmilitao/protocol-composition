Protocol Conformance Checker
============================

Grammar is limited to only check 'equals', 'subtype' and 'share' (and substitution).
Instead of recursion, we have 'typedef' for clarity.


TODO:
=====

* bounds on variables in environment and "<X> e", check bounds when using 'subtype' --- otherwise this is unsound.
* recheck that subtyping rules are all there.

* New Protocol Conformance
* also define NOT SHARE for testing when sharing should NOT work.

- define error constants/enum instead of having constants spread out through the code.

STYLE:
======

- use 'const' keyword for constants. Note that some browsers may not support this. However, our target is Google Chrome which does support 'const'. See: http://kangax.github.io/compat-table/es6/


FIXME --- GRAMMAR:
==================
* grammar simplifications to remove some unnecessary parenthesis on 'share' constructs, etc.
* TODO: read jison documentation on token precedences.

 not A <: A // subtype test
 not A == A // equality test
 	--> PROBLEM: ambiguity in the grammar!
 share A as B, C, D, E;
 share D as D, D;


Extra Credits:
==============
- Types and Programming Languages, Chapter 6 (for De Bruijn stuff).
- Subtyping Recursive Types, for recursion checks.




			// FIXME old equality of definitions --- is this no longer needed??
			/*
			case types.DefinitionType:{
				if( t1.definition() !== t2.definition() )
					return false;
				
				var t1s = t1.args();
				var t2s = t2.args();
				if( t1s.length !== t2s.length )
					return false;
				for( var i=0;i<t1s.length;++i )
					if( !equalsAux( t1s[i], t2s[i], trail ) )
						return false;
				return true;
			} */